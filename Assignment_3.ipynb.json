{
  "metadata": {
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    }
  },
  "nbformat_minor": 5,
  "nbformat": 4,
  "cells": [
    {
      "id": "e97b70bc-85df-40a1-9537-f71e034ac634",
      "cell_type": "markdown",
      "source": "## Write a Python program that:\n\nAccepts a comma-separated string of numbers from the user (e.g., \"1,2,3,4,5\").\nTypecasts the input string into a list of integers.\nPrint the resulting list of integers.\nExample Input:\n\"10,20,30,40,50\" or \n[10, 20, 30, 40, 50]\n",
      "metadata": {}
    },
    {
      "id": "1512152d-a5a8-4f61-b783-c186a0a2ba46",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "6bd54ab7-060f-4207-a5ce-abc140e3c796",
      "cell_type": "markdown",
      "source": "## Write a Python program that user to enter 5 different names (e.g., \"Alice, Bob, Charlie, David, Eve\").\nStores these names in a list and prints the list.\nThen, ask the user for a number and print the name at that index of the list. \n\nExample Input\n\n\"Alice, Bob, Charlie, David, Eve\"\nEnter an index: 2\n\n\nExample Output:\n\n\nList: ['Alice', 'Bob', 'Charlie', 'David', 'Eve']\nName at index 2: Charlie\n",
      "metadata": {}
    },
    {
      "id": "a59a34a4-72cf-4b40-9131-702388e668ed",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "b74c2e00-ed01-446f-af03-5e32ec46944f",
      "cell_type": "markdown",
      "source": "## Write a Python program that takes an integer input from the user and checks whether the number is:\n\n* Positive\n\n* Negative\n\n* Zero",
      "metadata": {}
    },
    {
      "id": "e6ee9b4c-0966-4bc9-8b3c-7a6d8c66e4e4",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "a36e94fe-20e0-4227-abd8-cbd7ca532f51",
      "cell_type": "markdown",
      "source": "## Create a Python program that takes a user's age as input and categorizes them into one of the following age groups:\n\n* Child (0-12)\n* Teen (13-19)\n* Adult (20-64)\n* Senior (65+)\n\nPrint the corresponding category based on the user's age.",
      "metadata": {}
    },
    {
      "id": "0a58d305-0dc2-4363-a420-1cacdd4c2c0b",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "13fb3a6c-ba33-41ef-8b6f-85cd454cc909",
      "cell_type": "markdown",
      "source": "## Write a program that asks the user for their name and age, and prints out a message such as: \"Hello [name], you are [age] years old.",
      "metadata": {}
    },
    {
      "id": "2ba6dab2-6064-450d-b44d-21a67f6767f6",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "753e9996-d137-4577-b8d8-39c697ae51e5",
      "cell_type": "markdown",
      "source": "## Write a Python program that demonstrates the use of arithmetic operators (+, -, *, /, %, //, **). Provide examples of each operator, such as:\n\n* Addition of two numbers.\n* Division of two numbers (including floor division).\n* Exponentiation (power).\n* Modulus to find the remainder",
      "metadata": {}
    },
    {
      "id": "2d6f9ba8-b098-4598-b62d-8057ac6b1342",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "1870c517-0e30-4bb0-a46a-8cbabc77e0c3",
      "cell_type": "markdown",
      "source": "## Create a Program to Reverse a String",
      "metadata": {}
    },
    {
      "id": "9c3e955a-d1c6-433e-a478-37cd1d9d0f6f",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "6f5a5402-580d-4ccc-98cf-96864dd0ee52",
      "cell_type": "markdown",
      "source": "## Write a program that takes a list of numbers as input from the user and sorts the list in ascending order. Print the sorted list after the operation.",
      "metadata": {}
    },
    {
      "id": "535fb5e3-2f46-4167-ae9e-7a4aaa379f97",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "68ec045f-fe59-4e3b-92d5-ae4bcc6ec39c",
      "cell_type": "markdown",
      "source": "## Write a program that asks the user for the price of a product and calculates the discount. If the price is greater than 100, give a 20% discount; otherwise, give a 10% discount. Print the discounted price using if-else statements.",
      "metadata": {}
    },
    {
      "id": "e19c45c9-0200-4d9a-8c02-a0406e50a5f7",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "25226917-1c9a-4d49-bb5a-edd4cae014ad",
      "cell_type": "markdown",
      "source": "## Write a Python program that takes a number (1-7) as input from the user, and prints the corresponding day of the week:\n\n* 1: Monday\n* 2: Tuesday\n* 3: Wednesday\n* 4: Thursday\n* 5: Friday\n* 6: Saturday\n* 7: Sunday",
      "metadata": {}
    },
    {
      "id": "b1062227-64b2-41c5-8db0-1b7aaf0269b8",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "81c12b61-6330-49ae-bf1d-bbead6dc1729",
      "cell_type": "markdown",
      "source": "## Write a program that asks the user for the weight of a package and calculates the shipping charges based on the following conditions:\n\n\n* If the weight is less than 1kg, the shipping cost is $5.\n  \n* If the weight is between 1kg and 5kg, the shipping cost is $10.\n\n  \n* If the weight is between 5kg and 10kg, the shipping cost is $15.\n\n  \n* If the weight is greater than 10kg, the shipping cost is $20.",
      "metadata": {}
    },
    {
      "id": "69207c42-7e00-4a9d-806c-6167759e75a6",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "f611a172-86d9-4fc8-9032-865be4866ec5",
      "cell_type": "markdown",
      "source": "## Write a Python program that asks the user for a single character and checks:\n\n* If the character is either a vowel (a, e, i, o, u) or a consonant (any alphabet letter other than a vowel).\nPrint \"Vowel\" if it is a vowel.\n \n Print \"Invalid character\" if it is neither.",
      "metadata": {}
    },
    {
      "id": "85e9e038-4a65-4943-b992-9f5c4e9db3c0",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "e96d0352-d6ce-4930-b1c0-0db377f67800",
      "cell_type": "markdown",
      "source": "## Write a Python program that asks the student’s grade. The program should check:\n\n* If the grade is greater than or equal to 90 and less than or equal to 100, print \"Top 5 Student\".\n* If the grade is greater than or equal to 80 and less than 90, print \"Top 10 Student\".\n* Otherwise, print \"Not in Top 10\".",
      "metadata": {}
    },
    {
      "id": "338da3ba-b6dc-48e4-96a6-a4b56bbe07a9",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "b935421a-02a1-4aaa-96bf-06aa1fd4ef2e",
      "cell_type": "markdown",
      "source": "## Write a Python program that checks if a student passed based on the following conditions:\n\n* If the marks are greater than or equal to 50, check\n  * if the attendance is 75% or more:\n  \n  * If attendance is 75% or more, print \"Passed\".\n\n  * If attendance is less than 75%, print \"Failed due to low attendance\".\n* If the marks are less than 50, print \"Failed due to low marks\".",
      "metadata": {}
    },
    {
      "id": "f30bf6d5-6911-4343-a7b0-c3240cbe5b7c",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "id": "7a98211b-92fb-447f-a877-0a657a30a1cc",
      "cell_type": "markdown",
      "source": "## Write a Python program that checks if a person is eligible for a loan:\n\n* If the person’s credit score is above 700, check if their income is above $50,000:\n    * If true, print \"Loan Approved\".\n    * If false, print \"Loan Denied due to low income\".\n* If the credit score is below 700, print \"Loan Denied due to low credit score",
      "metadata": {}
    },
    {
      "id": "41851db1-51fb-4ccf-8963-fa13caab4abf",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    }
  ]
}